// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../docker-compose.yaml",
		"docker-compose.yml"
	],

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "api",
// .devcontainer/devcontainer.json
  "name": "Python Full DevContainer",

  "runServices": ["api"],
  "shutdownAction": "stopCompose",
  "forwardPorts": [8000],

  "remoteUser": "root",

  "workspaceFolder": "/app",

  "postCreateCommand": "python -m venv .venv && .venv/bin/pip install --upgrade pip && if [ -f requirements.txt ]; then .venv/bin/pip install -r requirements.txt; fi",

  "remoteEnv": {
    "NVIDIA_VISIBLE_DEVICES": "all",
    "VIDEO_SOURCE": "0"
  },

  "customizations": {
    "vscode": {
      "settings": {
        "workbench.iconTheme": "flow-dark",
        "extensions.ignoreRecommendations": true,
        "terminal.integrated.enableMultiLinePasteWarning": false,
        "editor.codeActionsOnSave": {
          "source.organizeImports": "explicit",
          "source.fixAll.eslint": "explicit"
        },
        "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": false,
        "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": false,
        "editor.inlayHints.enabled": false,
        "material-icon-theme.activeIconPack": "nest",
        "workbench.colorTheme": "GitHub Dark",
        "docker.images.groupBy": "ImageId",
        "git.autofetch": true,
        "editor.inlineSuggest.enabled": true,
        "github.copilot.enable": {
          "*": true,
          "plaintext": true,
          "markdown": false,
          "scminput": false
        },
        "workbench.editorAssociations": {
          "*.copilotmd": "vscode.markdown.preview.editor",
          "*.db": "default"
        },
        "remote.autoForwardPortsSource": "hybrid",
        "containers.images.groupBy": "ImageId",
        "github.copilot.nextEditSuggestions.enabled": true,
        "gitlens.ai.model": "vscode",
        "gitlens.ai.vscode.model": "copilot:gpt-4.1"
      },
      "extensions": [
        "dbaeumer.vscode-eslint",
        "donjayamanne.python-environment-manager",
        "donjayamanne.python-extension-pack",
        "eamodio.gitlens",
        "eliverlara.andromeda",
        "freecodecamp.freecodecamp-dark-vscode-theme",
        "github.codespaces",
        "github.copilot",
        "github.copilot-chat",
        "github.github-vscode-theme",
        "kevinrose.vsc-python-indent",
        "mgesbert.python-path",
        "ms-ceintl.vscode-language-pack-pt-br",
        "ms-python.debugpy",
        "ms-python.isort",
        "ms-python.pylint",
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.vscode-python-envs",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.jupyter-renderers",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.vscode-jupyter-slideshow",
        "njpwerner.autodocstring",
        "thang-nm.flow-icons",
        "visualstudioexptteam.intellicode-api-usage-examples",
        "visualstudioexptteam.vscodeintellicode",
        "wholroyd.jinja"
      ]
    }
  }
}